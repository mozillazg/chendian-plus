#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import absolute_import, print_function, unicode_literals

from .settings import *   # NOQA

SECRET_KEY = '-+m+-60&5+57=2q!aufcbj8c3yzt1=yjb+iu0#&2(&vo#s=2r)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'OPTIONS': {
            'debug': True,
            'context_processors': (
                "django.contrib.auth.context_processors.auth",
                "django.core.context_processors.request",
                "django.core.context_processors.debug",
                "django.core.context_processors.i18n",
                "django.core.context_processors.media",
                "django.core.context_processors.static",
                "django.core.context_processors.tz",
                "django.template.context_processors.debug",
                'core.context_processors.last_year',
                'core.context_processors.past_years',
            ),
        },
    }
]


RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 2,
        'PASSWORD': '',
        'DEFAULT_TIMEOUT': 60 * 60 * 5,
    },
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'DEBUG',
        },
        'django.request': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'qq': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'book': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'member': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'api': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'core': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'blog': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    }
}

QINIU = {
    'access_key': b'',
    'secret_key': b'',
    'bucket_name': b'',
    'base_url': b'http://foobar.qiniudn.com/{filename}',
}
DEFAULT_PASSWORD = None


from fnmatch import fnmatch


class glob_list(object):
    def __init__(self, ips):
        self.ips = ips

    def __contains__(self, key):
        for ip in self.ips:
            if fnmatch(key, ip):
                return True
        return False

INTERNAL_IPS = glob_list(
    ('127.0.0.1', '192.168.*.*', '10.*.*.*', '172.16.*.*')
)

# debug_toolbar
INSTALLED_APPS += (
    'debug_toolbar',
    'debug_panel',
)
MIDDLEWARE_CLASSES += (
    'debug_panel.middleware.DebugPanelMiddleware',
)
DEBUG_TOOLBAR_CONFIG = {
    'JQUERY_URL': '',
}
CACHES['debug-panel'] = {
    'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
    'LOCATION': '/var/tmp/debug-panel-cache',
    'TIMEOUT': 300,
    'OPTIONS': {
        'MAX_ENTRIES': 200
    }
}

REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'] = (
    'rest_framework.renderers.JSONRenderer',
    'rest_framework.renderers.BrowsableAPIRenderer',
)
